// Create a new file called "config.js" and replace all the fields with your configuration

exports.telegramAPIToken = ""; // Your telegram bot API key. Ask the @botfather for an api key
exports.chatId = ""; // your telegram id. This will make sure that the msgs are sent only to you
exports.OTPsecret = ""; // run "npm run generate-password" in order to get this setting
exports.localNodeURL = "http://127.0.0.1:7000/api/node/status/"; // If you want to use for testing "https://node04.lisk.io/api/loader/status/sync" or use your node in testnet, don't forget the port 7000
exports.diffBlockHeight = 2; // The difference of block heights between your node and the others before triggering an alarm
exports.minBlockHeightNodeMatch = -3; // The difference of block heights between your node and the others before triggering an alarm
exports.rebootWelcome = true; // The reboot telegram message
exports.nodeName = "My node"; // Used to identify which node is being referred to with SMS 
exports.minutesBetweenTexts = 15; // How many mins. before sending another SMS

exports.textMagicData = {
  enabled: false, // switch to true only if you have the following credentials fro textMagic.
  username: "",
  APIkey: "",
  phoneNumber: "",
  rebootWelcome: true // It sends an sms at the startup of the bot
};

exports.twilioData = {
  enabled: false, // switch to true only if you have the following credentials fro Twilio.
  username: "",
  password: "",
  fromPhoneNumber: "",
  toPhoneNumber: "",
  rebootWelcome: true // It sends an sms at the startup of the bot
};

// Cronjobs
exports.executeBlockHeightsCron = true; // Compare the local block height with the nodes of the network every minute
exports.executeIsForgingCron = true; // Check every minute if the node is forging or not
exports.executeServerStatusCron = false; // Check the server stats

exports.cpuThreshold = 90; // Sends a notification to the user when cpu usage is over this %
exports.spaceUsageThreshold = 10; // Sends a notification to the user when total free disk space in under this %
exports.memoryThreshold = 90; // Sends a notification to the user when memory usage is over this %
exports.minUploadSpeed = 100; // expressed in Mbps
exports.minDownloadSpeed = 100; // expressed in Mbps
exports.minNetworkPing = 100; // expressed in ms

exports.liskPWDFolder = "/home/lisk/lisk-test"; // the path of your lisk node

exports.remoteNodes = [
  {
    url: "https://testnet-wallet.lisknode.io/api/node/status",
    name: "gr33ndragon-wallet"
  },
  {
    url: "https://testnet.lisk.io/api/node/status",
    name: "LiskHQ"
  },
  {
    url: "http://198.50.245.220:7000/api/node/status",
    name: "Lisknode.net"
  },
  {
    url: "http://lisk99.mzpool.net:7000/api/node/status",
    name: "Sexor"
  }
];
